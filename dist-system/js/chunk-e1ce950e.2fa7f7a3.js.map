{"version":3,"sources":["webpack:///./src/render/src/index.vue","webpack:///src/render/src/index.vue","webpack:///./src/render/src/index.vue?12a3","webpack:///./src/render/src/utils.js","webpack:///./node_modules/core-js/modules/es.function.name.js"],"names":["render","staticRenderFns","component","http","getProject","dir","setRenderPreview","location","protocol","window","globalProject","global","initGlobalConfig","initHttp","baseUrl","process","urlMap","get","contentType","options","$$global","project","data","initProject","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","call","this","match","error"],"mappings":"qKAAIA,EAAQC,E,oCCIZ,GACE,QADF,oKAEA,yBAFA,SAGA,kBAHA,OAIA,cAEA,qEANA,yGCJ8V,I,YFO1VC,EAAY,eACd,EACAF,EACAC,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,6IGdXC,EAAO,KACEC,EAAU,yDAAG,WAAOC,GAAP,8FAExBC,iBAE0B,UAAtBC,SAASC,SAJW,yCAKfC,OAAOC,eALQ,cAQnBP,IACGQ,EAASC,eAAiB,MAChCD,EAAOE,SAAS,CACdC,QAASC,8BACTC,OAAQ,CACNC,IAAK,2BAEPC,YAAa,mBACbC,QAAS,gEACR,CAAEC,SAAUT,IACfR,EAAOQ,EAAOR,MAlBQ,SAqBYA,EAAKc,IAAI,MAAO,CAAEZ,QArB9B,uBAqBRgB,EArBQ,EAqBhBC,KAAQD,QArBQ,UAsBlBE,eAAYF,GAtBM,iCAuBjBA,GAvBiB,4CAAH,uD,qBCLvB,IAAIG,EAAc,EAAQ,QACtBC,EAAiB,EAAQ,QAAuCC,EAEhEC,EAAoBC,SAASC,UAC7BC,EAA4BH,EAAkBI,SAC9CC,EAAS,wBACTC,EAAO,QAIPT,GAAiBS,KAAQN,GAC3BF,EAAeE,EAAmBM,EAAM,CACtCC,cAAc,EACdjB,IAAK,WACH,IACE,OAAOa,EAA0BK,KAAKC,MAAMC,MAAML,GAAQ,GAC1D,MAAOM,GACP,MAAO","file":"js/chunk-e1ce950e.2fa7f7a3.js","sourcesContent":["var render, staticRenderFns\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\nimport { currentPage } from '@/assets/page'\nimport { getProject } from './utils'\n\nexport default {\n  async created () {\n    const { dir } = this.$route.params\n    await getProject(dir)\n    if (currentPage.value) {\n      // @ts-ignore\n      this.$router.replace(`/page/${dir}/${currentPage.value.id}`)\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { setRenderPreview } from '../../assets/render'\nimport { initGlobalConfig } from '../../components/mobile-render/render/utils'\nimport { initProject } from '@/assets/project'\n\nlet http = null\nexport const getProject = async (dir) => {\n  // 测试环境预览才需要，正式环境直接走文件\n  setRenderPreview()\n  // 正式环境\n  if (location.protocol === 'https') {\n    return window.globalProject\n  }\n  // 非正式环境\n  if (!http) {\n    const global = initGlobalConfig(null)\n    global.initHttp({\n      baseUrl: process.env.VUE_APP_FILE_SERVER,\n      urlMap: {\n        get: '/butterfly/project/:dir'\n      },\n      contentType: 'application/json',\n      options: '{ loadingMethods: $$global.loading, notify: $$global.toast }'\n    }, { $$global: global })\n    http = global.http\n  }\n  // @ts-ignore\n  const { data: { project } } = await http.get('get', { dir })\n  await initProject(project)\n  return project\n}\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"],"sourceRoot":""}