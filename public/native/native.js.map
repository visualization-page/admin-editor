{"version":3,"file":"native.js","sources":["../node_modules/_@xm_appInfo@2.0.12@@xm/appInfo/index.js","../src/cookie.js","../src/utils.js","../src/locate.js","../lib/bridge.js","../src/index.js","../src/mockNative.js"],"sourcesContent":["var origin = location.hostname.split('.')\nvar ext = origin[origin.length - 1]\nvar online = /s/.test(location.protocol)\n\nfunction setToObject(data, target) {\n  if (typeof data === 'object' && typeof target === 'object') {\n    for (var key in data) {\n        target[key] = data[key]\n    }\n    return true\n  }\n  return false\n}\n\n// get info by orgType\n// @param field {String}\n// @param val {String|Number}\n// @return {Object}\nfunction getDataByField(field, val) {\n  for (var type in info) {\n    for (var key in info[type]) {\n      if (key === field && info[type][key] === val) {\n        return info[type]\n      }\n    }\n  }\n  return {}\n}\n\nvar info = {\n  jituancaiyun: {\n    allName: '移动彩云',\n    name: '彩云',\n    logo: 'https://statics.jituancaiyun.com/activity/images/jtcy/dept.png',\n    logoAbs: '/images/appLogo/jtcy/logo-s.png',\n    slogan: '移动彩云，让工作沟通更便捷',\n    uri: 'jituancaiyun',\n    uriPrefix: '',\n    adminPrefix: '',\n    hostName: '.jituancaiyun.' + ext,\n    color: '#de6262',\n    avatar: '//filesystem.api.jituancaiyun.'+ ext +'/sfs/avatar?uid=',\n    orgType: 1,\n    downUrl: '//jituancaiyun.com/d',\n    adminUrl: location.protocol + '//admin.jituancaiyun.' + ext,\n    loginUrl: location.protocol + '//acl.admin.jituancaiyun.' + ext + '/power/user/view/login.html',\n    userInfoDoUrl: '//note.api.jituancaiyun.' + ext + '/hta/org/userInfo.do',\n    serviceUrl: location.protocol + '//appadmin.api.jituancaiyun.'+ ext +'/m/index.html#/service?appId=',\n    approveUrl: location.protocol + '//'+ (online ? 'approve.' : '') +'api.jituancaiyun.'+ ext + (online ? '/approve/caiyun/approve-c' : '/approve/1') + '/index.html',\n    expenseUrl: location.protocol + '//'+ (online ? 'approve.' : '') +'api.jituancaiyun.'+ ext\n        + (online ? '/approve/caiyun' : '')\n        + (online ? '/expense-new' : '/expense/1') +'/index.html',\n    expenseCreateUrl: function (id, type) {\n      // type: travel purchase\n      // return location.protocol + 'approve.api.jituancaiyun.'+ ext + (online ? '/approve/caiyun' : '') + '/'+ (online ? 'expense-new' : 'expense') + '/1/index.html#/create-expense-entry?type='+ type +'&approveId='+ id\n      if (!type) {\n        type = 'purchase'\n      }\n      return this.expenseUrl + '#/create-expense-entry?approveId='+ id +'&type=' + type\n    },\n    hasSceneCmsLink: true,\n    domain: 'jituancaiyun'\n  },\n  duanmatong: {\n    allName: '移动办公云',\n    name: '移动办公云',\n    logo: 'https://statics.duanmatong.cn/images/appLogo/hnm/logo-s.png',\n    logoAbs: '/images/appLogo/hnm/logo-s.png',\n    slogan: '移动办公更轻松',\n    uri: 'duanmatong',\n    uriPrefix: '',\n    adminPrefix: '',\n    hostName: '.duanmatong.cn',\n    color: '#2e8ffa',\n    avatar: '//filesystem.api.duanmatong.cn/sfs/avatar?uid=',\n    orgType: 6,\n    downUrl: '//duanmatong.cn/d',\n    adminUrl: 'https://admin.duanmatong.cn',\n    loginUrl: '//acl.duanmatong.cn/power/user/view/duanmatongLogin.html',\n    userInfoDoUrl: '//note.api.duanmatong.cn/hta/org/userInfo.do',\n    serviceUrl: 'https://admin.duanmatong.cn/m/index.html#/service?appId=',\n    approveUrl: 'https://approve.api.duanmatong.cn/approve/1/index.html',\n    expenseUrl: 'https://approve.api.duanmatong.cn/expense/1/index.html',\n    hasSceneCmsLink: true,\n    domain: 'duanmatong'\n  },\n  henan: {\n    allName: '快马',\n    name: '快马',\n    logo: 'https://statics.jituancaiyun.com/activity/images/jtcy/dept.png',\n    logoAbs: '/images/appLogo/jtcy/logo-s.png',\n    slogan: '',\n    uri: 'henancaiyun',\n    uriPrefix: '',\n    adminPrefix: '',\n    hostName: 'henancaiyun.com',\n    color: '#FF5858',\n    avatar: '//fs.henancaiyun.com/sfs/avatar?uid=',\n    orgType: 8,\n    downUrl: '//henancaiyun.com/d',\n    adminUrl: '//admin.henancaiyun.com',\n    loginUrl: '//acl.henancaiyun.com/power/user/view/login.html',\n    userInfoDoUrl: '//note.api.henancaiyun.com/hta/org/userInfo.do',\n    serviceUrl: 'https://admin.henancaiyun.com/m/index.html#/service?appId=',\n    approveUrl: 'https://api.henancaiyun.com/approve/1/index.html',\n    expenseUrl: 'https://api.henancaiyun.com/expense/1/index.html',\n    hasSceneCmsLink: true\n  },\n  jx: {\n    allName: '智办公',\n    name: '智办公',\n    logo: 'https://statics.jituancaiyun.com/activity/images/jtcy/dept.png',\n    logoAbs: '/images/appLogo/jtcy/logo-s.png',\n    slogan: '智办公，更轻松',\n    uri: 'zbangong',\n    uriPrefix: '',\n    adminPrefix: '',\n    hostName: 'zbangong.cn',\n    color: '#558EEE',\n    avatar: '//fs.zbangong.cn/sfs/avatar?uid=',\n    orgType: 9,\n    downUrl: '//download.zbangong.cn',\n    adminUrl: 'https://admin.zbangong.cn',\n    loginUrl: '//admin.zbangong.cn/power/user/view/jxLogin.html',\n    userInfoDoUrl: '//api.zbangong.cn/hta/org/userInfo.do',\n    serviceUrl: 'https://admin.zbangong.cn/m/index.html#/service?appId=',\n    approveUrl: 'https://api.zbangong.cn/approve/1/index.html',\n    expenseUrl: 'https://api.zbangong.cn/expense/1/index.html',\n    hasSceneCmsLink: true,\n    domain: 'zbangong.cn'\n  },\n  maizhiyun: {\n    allName: '脉智云',\n    name: '脉智云',\n    logo: 'https://statics.jituancaiyun.com/activity/images/jtcy/dept.png',\n    logoAbs: '/images/appLogo/jtcy/logo-s.png',\n    slogan: '让工作沟通更便捷！',\n    uri: 'maizhiyun',\n    uriPrefix: '',\n    adminPrefix: '',\n    hostName: '.maizhiyun.cn',\n    color: '#558EEE',\n    avatar: '//api.maizhiyun.cn/sfs/avatar?uid=',\n    orgType: 34,\n    downUrl: '//maizhiyun.cn/d',\n    adminUrl: 'https://admin.maizhiyun.cn',\n    loginUrl: '//acl.maizhiyun.cn/power/user/view/login.html',\n    userInfoDoUrl: '//api.maizhiyun.cn/hta/org/userInfo.do',\n    serviceUrl: 'https://admin.maizhiyun.cn/m/index.html#/service?appId=',\n    approveUrl: 'https://api.maizhiyun.cn/approve/1/index.html',\n    expenseUrl: 'https://api.maizhiyun.cn/expense/1/index.html',\n    hasSceneCmsLink: true,\n    domain: 'maizhiyun'\n  },\n  hebeicaiyun: {\n    allName: '河北云办公',\n    name: '河北云办公',\n    logo: 'https://statics.hebeicaiyun.com/config/logo.png ',\n    slogan: '云办公，更轻松',\n    uri: 'hebeicaiyun',\n    uriPrefix: '',\n    adminPrefix: '',\n    hostName: '.hebeicaiyun.com',\n    color: '#0099ff',\n    avatar: 'https://api.hebeicaiyun.com/sfs/avatar?uid=',\n    orgType: 20,\n    downUrl: 'https://hebeicaiyun.com/d',\n    adminUrl: 'https://admin.hebeicaiyun.com',\n    loginUrl: 'https://admin.hebeicaiyun.com/power/user/view/login.html',\n    userInfoDoUrl: 'https://admin.hebeicaiyun.com/hta/org/userInfo.do',\n    serviceUrl: 'https://admin.hebeicaiyun.com/m/index.html#/service?appId=',\n    approveUrl: 'https://api.hebeicaiyun.com/approve/1/index.html',\n    expenseUrl: 'https://api.hebeicaiyun.com/expense/1/index.html',\n    hasSceneCmsLink: true,\n    domain: 'hebeicaiyun'\n  },\n  sd: {\n    allName: '山东彩云',\n    name: '山东彩云',\n    logo: 'https://statics-sd.uban360.com/config/logo.png',\n    slogan: '云办公，更轻松',\n    uri: '-sd',\n    uriPrefix: '',\n    adminPrefix: '',\n    hostName: '-sd.uban360.com',\n    color: 'rgba(25,157,250,1)',\n    avatar: 'https://api-sd.uban360.com/sfs/avatar?uid=',\n    orgType: 26,\n    downUrl: 'https://hebeicaiyun.com/d',\n    adminUrl: 'https://admin-sd.uban360.com',\n    loginUrl: 'https://admin-sd.uban360.com/power/user/view/login.html',\n    userInfoDoUrl: 'https://admin-sd.uban360.com/hta/org/userInfo.do',\n    serviceUrl: 'https://admin-sd.uban360.com/m/index.html#/service?appId=',\n    approveUrl: 'https://api-sd.uban360.com/approve/1/index.html',\n    expenseUrl: 'https://api-sd.uban360.com/expense/1/index.html',\n    hasSceneCmsLink: true,\n    domain: '-sd.uban360.com'\n  }\n}\n\nexport default function(orgType) {\n  orgType = orgType !== undefined\n    ? Number(orgType)\n    : orgType\n  if (orgType === undefined) {\n    orgType = 1\n  } else if (+orgType === 8011) {\n    // 快马 子应用\n    orgType = 8\n  }\n  var data = getDataByField('orgType', orgType)\n  var result = {\n    ext: ext,\n    online: online,\n    data: data,\n    getDataByField: getDataByField\n  }\n  setToObject(data, result)\n  return result\n}\n","// get cookie\n\nexport default {\n  get(name) {\n    let cookieValue = null\n    if (document.cookie && document.cookie !== '') {\n      let cookies = document.cookie.split(';')\n      for (let i = 0; i < cookies.length; i++) {\n        let cookie = cookies[i].trim()\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1))\n          break\n        }\n      }\n    }\n    return cookieValue\n  },\n\n  set(name, val, domain) {\n    document.cookie = ` ${name}=${val}; domain=${domain};`\n  },\n\n  debug(obj, domain) {\n    if (typeof obj === 'string' || (obj = obj.payToken)) {\n      this.set('payToken', obj, domain)\n    } else if (typeof obj === 'object') {\n      Object.keys(obj).forEach(key => {\n        this.set(key, obj[key], domain)\n      })\n    }\n  }\n}\n","export default {\n  isIOS: /iPhone|iPad|iPod/.test(navigator.userAgent),\n\n\tgetSearch() {\n\t\tlet search = location.search.slice(1)\n\t\tlet searchObj = {}\n\t\tlet key = \"\"\n\t\tlet splitArr = []\n\n\t\tif(search) {\n\t\t\tlet paramArr = search.split('&')\n\t\t\tfor(let i = 0; i < paramArr.length; i++) {\n\t\t\t\tsplitArr = paramArr[i].split(\"=\")\n\t\t\t\tkey = splitArr[0]\n\t\t\t\tsearchObj[key] = splitArr[1]\n\t\t\t}\n\t\t\treturn searchObj\n\t\t}\n\t\treturn null\n\t},\n\n\tgetCookie: (name) => {\n\t\tlet cookieValue = null\n\t\tif (document.cookie && document.cookie != '') {\n\t\t\tlet cookies = document.cookie.split(';')\n\t\t\tfor (let i = 0; i < cookies.length; i++) {\n\t\t\t\tlet cookie = cookies[i].trim()\n\t\t\t\tif (cookie.substr(0, name.length + 1) === (name + '=')) {\n\t\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1))\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cookieValue\n\t},\n\n\t// TODO 不要改变参数的内容，应该返回新的副本\n\tgetBinarySum(array) {\n\t\tlet sum = 0\n\t\tarray.map(item => {\n\t\t\tsum += (1 << (item - 1))\n\t\t})\n\t\treturn sum\n\t},\n\n\t//  获取明天的时间戳 毫秒数\n\tgetTomorrowTimeStamp() {\n\t\tlet date = new Date()\n\t\tdate.setDate(date.getDate() + 1)\n\t\treturn date.getTime()\n\t},\n\n  genderCallbackToken(num = 0) {\n\t  return `defineCallback_${Date.now() + num}`\n  }\n}\n","import utils from './utils'\n\nlet locateInstance = null\nlet locateComplete = false\nlet timerHandle = null\n\n// 处理地图返回的城市名称\n// 直辖市 自治区 情况下 城市名称与正常的省份有区别\n// @param address {Object}\n// @return {Object}\nconst handleAddressComponent = function (address) {\n  let { city, province, district } = address\n  if (!city) {\n    city = province\n  }\n  if (city === province) {\n    const zCity = ['上海市', '北京市', '重庆市', '天津市']\n    if (zCity.every(x => x !== city)) {\n      // 自治区\n      city = district\n    }\n  }\n  return {\n    ...address,\n    city\n  }\n}\n\nconst geoSearch = function(lnglatArr) {\n  return new Promise((res, rej) => {\n    AMap.service('AMap.Geocoder', () => {\n      new AMap.Geocoder({ city: '010' }).getAddress(lnglatArr, (status, result) => {\n        if (status === 'complete' && result.info === 'OK') {\n          const format = handleAddressComponent(result.regeocode.addressComponent)\n          session(format)\n          res(format)\n        } else {\n          locateError(rej, 'AMap.Geocoder 查询失败')\n        }\n      })\n    })\n  })\n}\n\n// 最终的数据处理\nconst doLocateRes = function(data) {\n  // 校验结果的准确性\n  const { adcode, lat, lng } = data\n  if (adcode) {\n    const format = handleAddressComponent(data)\n    session(data)\n    return Promise.resolve(format)\n  } else if (window.AMap) {\n    // 未返回城市，利用高德API获取\n    return geoSearch([lng, lat]).then(res => ({ ...res, lng, lat }))\n  } else {\n    return locateError(null, 'AMap全局未注册，请引入高德SDK')\n  }\n}\n\nconst session = function (param) {\n  if (param instanceof Object) {\n    sessionStorage.setItem('locate-address', JSON.stringify(param))\n  } else {\n    const item = sessionStorage.getItem('locate-address')\n    return item ? JSON.parse(item) : null\n  }\n}\n\nconst locateError = function (reject, msg = '定位失败，请重试') {\n  const obj = { code: 400, msg }\n  if (reject) {\n    reject(obj)\n  } else {\n    return Promise.reject(obj)\n  }\n}\n\nconst timeout = function (reject, delayTimeout) {\n  timerHandle = setTimeout(()=> {\n    if (!locateComplete) {\n      locateError(reject, '定位超时')\n    }\n  }, delayTimeout)\n}\n\n// @params ignore {Boolearn} ignore 不采用location.search中的经纬度\n// @params options {Object} 包含以下可选参数\n// @params options.sdk {Number} 用什么sdk定位\n// 0 => 高德地图(默认)   1 => 百度地图\n// @params options.location {Number} 用什么坐标系\n// 0 => 高德 (默认)  1 => 百度\n// @params options.timeout {Number} 超时时间(s)\n// locateHandleTimer = null\nexport default function(options = {}) {\n  const sessionLocate = session()\n  let mergeOptions = {\n    sdk: 0,\n    location: 0,\n    category: 0,\n    timeout: 1,\n    // timeout\n    // 在部分安卓上 很小时，不能定位成功\n    // 在iOS上必须设置为小于等于5的数 才能定位成功\n    // 默认针对系统设置timeout的大小\n    timeoutHack: true,\n    accuracy: 100,\n    delayTimeout: 10 * 1000,\n    ...options\n  }\n\n  if (mergeOptions.timeoutHack) {\n    mergeOptions.timeout = utils.isIOS ? 1 : 5000\n  }\n\n  // 实例存在\n  if (locateInstance) {\n    console.log('locate instance is exist')\n    return locateInstance\n  }\n\n  locateInstance = new Promise((resolve, reject)=> {\n    timeout(reject, mergeOptions.delayTimeout)\n\n    // session不存在 或 强制定位\n    if (options.force || !sessionLocate) {\n      locateComplete = false\n\n      return this.native('getlocation', mergeOptions).then(res => {\n        locateComplete = true\n        timerHandle && clearTimeout(timerHandle)\n\n        if (\n          res.code === 200 &&\n          res.data &&\n          res.data.lat &&\n          res.data.lng\n        ) {\n          resolve(doLocateRes(res.data))\n        } else {\n          locateError(reject)\n        }\n      })\n    } else {\n      locateComplete = true\n      timerHandle && clearTimeout(timerHandle)\n      resolve(sessionLocate)\n    }\n  }).finally(() => {\n    locateInstance = null\n  })\n\n  return locateInstance\n}\n","/**\n * bridge.js\n * modified by Jmingzi at 2017/6/21\n *\n * add applicative method do not need to consider different version\n *\n * support promise or normal call\n */\n\nconst ua = window.navigator && window.navigator.userAgent || ''\nconst util = {\n  isIOS: /Mobile/.test(ua) && ua.match(/iPad|iPod|iPhone/),\n  isAndroid: /Mobile/.test(ua) && /Android/i.test(ua)\n}\n\n// 所有提供给 Native 或 H5 调用的 API 或者临时生成的唯一的 callback 函数都挂载在这个对象上（临时的 callback 用完要及时 delete 掉）\nwindow.JSBridge = {\n  _SURPPORTED_API: null,\n  // (Native主动调用)这个对象上面会挂载所有 Native 调用 H5 的接口，例如H5页面弹框等\n  H5API: {\n\n  },\n  // 所有回调函数都注册到这里\n  _callback: {\n\n  },\n  /*\n * 所有通过 `win.JSBridge.NativeAPI.bindNativeEvent` 注册的事件都挂载在这里\n * 当 Native 调用 `win.JSBridge.onEvent` 发送事件通知时，都来这里找到对应的事件类型和回调函数一一执行\n *\n * @example(经过执行后可能会变成这样)\n * _event: {  // 事件类型为 key，注册事件回调函数按注册顺序放在数组里\n *   \"activeweb\": [\n *     eventcallback1,\n *     eventcallback2...\n *   ],\n *   \"eventType2\": [\n *     eventcallback1,\n *     eventcallback2...\n *   ],\n * }\n */\n  _event: {\n\n  },\n  /**\n   当 Native 成功执行完且需回调 H5 方法的时候调用这个方法（一般是在 H5 发起的网络请求中包含了 callback 参数时才需要回调），并按下面的数据格式传递数据\n   @param callbackToken {String} 对应于网络请求中发过去的callback参数值\n   @param response {Object} JSON 对象，具体字段如下：\n   @param response.success {Boolean} 成功与否\n   @param response.msg {String} 相关信息\n   @param response.data {Object} JSON 数据对象\n   @param response.code {Int} 状态码\n\n   @example\n   // 接着上面“网络请求格式约定”的例子\n   window.JSBridge.onSuccess('token_1439804657177',{\n      code: 200,\n      success: true,\n      msg: '执行成功',\n      data: [\n        {name: '张三', tel: 123456789},\n        {name: '移动客服', tel: 10086}\n      ]\n    });\n   */\n  onSuccess: function(callbackToken, response){\n    // var self = this;\n    if(typeof callbackToken === 'string' && typeof response === 'object'){\n      try{\n        window.JSBridge._callback[callbackToken](response);\n      }catch(err){\n        // TODO (全局提示、错误日志收集等)\n      }\n    }else{\n      // TODO (调用Native失败率统计等)\n      try{\n        if (typeof response === 'string') {\n          response = JSON.parse(decodeURIComponent(response))\n        }\n\n        window.JSBridge._callback[callbackToken](response);\n      }catch(err){\n        // TODO (全局提示、错误日志收集等)\n      }\n    }\n  },\n  /**\n   Native 执行发生错误时回调这个方法，可用在当网络请求中没有 callback 参数时回调这个方法而不是 window.JSBridge.onSuccess(callbackToken, response)；\n   或者在 H5 并没有调用 Native 方法时，发生了错误调用这个方法来统计错误信息等。参数如下：\n   @param error {Object} JSON 对象，错误原因描述\n   @param error.level {Int} 错误等级，值越大越严重\n   @param error.msg {String} 错误描述\n   @param error.stack {String} 可选，错误发生时程序堆栈信息\n   */\n  onError: function(error){\n    // TODO\n  },\n  /**\n   * 调用 Native API（将发出约定格式的请求，由 Native 拦截此请求并执行相应方法）\n   *\n   * Doc: http://wiki.shinemo.com:8090/pages/viewpage.action?pageId=15565665\n   * Example:\n   *   window.JSBridge.requestHybrid({\n  *     module: 'addressmodule',\n  *     method: 'getAddressList',\n  *     data: {\n  *       sort: 'increase'\n  *     },\n  *     callback: function(data) {\n  *       conosle.log(JSON.stringify(data));\n  *     }\n  *   });\n   *\n   * @param {Object} params 传过去的参数对象\n   * @param {String} params.module 必填，要调用的 Native 模块的名称\n   * @param {String} params.method 必填，要调用的 Native API 名称\n   * @param {Object} params.data 选填，传过去参数值\n   * @param {Function} params.callback 选填，Native 完成后的回调函数\n   */\n  requestHybrid: function(params) {\n    var self = this;\n\n    // 如果有回调函数，则注册在 window.JSBridge._callback 对象上面，由它做统一分发，调用后销毁\n    if(params.callback) {\n      var token = params.callbackName || ('token_' + (new Date().getTime())) ;\n      self._callback[token] = function(data) {\n        params.callback(data);\n        delete self._callback[token];\n      }\n      // 将token传给Native回调使用\n      params._token = token;\n    }\n\n    var createdUrl = self._getUrlByParams(params,params.callbackName);\n    self._postToNative(createdUrl);\n  },\n\n  /**\n   * 根据参数生成约定格式的 Url\n   */\n  _getUrlByParams: function(params) {\n    var totalUrl = '';\n    var protoHead = 'native://';\n\n    totalUrl += protoHead +  params.method;\n\n    /*  if(params.callback){\n   !params.data && (params.data = {});\n   params.data.callback = params._token;\n   }*/\n\n    if(params.data) {\n      if(typeof params.data==\"object\"){\n        params.data = JSON.stringify(params.data)\n      }\n      totalUrl += '?data=' + encodeURIComponent(params.data);\n      totalUrl +='&callback='+params._token;\n    }else{\n      totalUrl +='?callback='+params._token;\n    }\n\n    return totalUrl;\n  },\n\n  /**\n   * 利用生成的 url 发出网络请求供 Native 拦截并调用相应方法\n   */\n  _postToNative: function(createdUrl) {\n\n    /*\n   @FIXME:\n   通过修改 location 来发起请求通知客户端会导致一个问题：\n   通过 <script src=\"hybrid-bridge.js\"></script> 引入脚本后，如果这个脚本初始化时发出请求\n   native://webview/test 则页面后面的 <script></script> 代码则无法执行\n   方案：在 hybrid-bridge.js 初始化时先不调用 win.JSBridge._confirmSurpportedAPI 发起请求，\n   而是在页面的脚本里面再调用此方法发起请求。\n   */\n    /* if(util.isIOS()) {\n   win.location = createdUrl;\n   }else if(util.isAndriond()){*/\n    var iframe = document.createElement('iframe');\n    iframe.src = createdUrl;\n    iframe.style.display = 'none';\n    document.body.appendChild(iframe);\n    document.body.removeChild(iframe);\n    iframe = null;\n    /*}else{\n   win.location = createdUrl;\n   }*/\n  },\n\n  native: function(method, data) {\n    // 浏览器支持Promise 且 使用Promise\n    if (window.Promise) {\n      // 返回Promise\n      return window.JSBridge.nativePromise(method, data)\n    } else {\n      // 返回then方法\n      var cb = null\n      setTimeout(function() {\n        window.JSBridge.requestHybrid({\n          method: method,\n          data: data,\n          callback: function(result) {\n            cb && cb(result)\n          }\n        })\n      }, 0)\n      return {\n        then: function(f) {\n          cb = f\n        }\n      }\n    }\n  },\n\n  // 支持Promise时的native\n  nativePromise: function(method, data) {\n    return new Promise(function(resolve, reject) {\n      window.JSBridge.requestHybrid({\n        method: method,\n        data: data,\n        callback: function(result) {\n          if (result.code === 200) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        }\n      })\n    })\n  },\n\n  // 去掉右上角菜单\n  noMenu: function(noDelay = true) {\n    var inner = function() {\n      window.JSBridge.native('menu', [])\n    }\n    if (util.isIOS && !noDelay) {\n      setTimeout(inner, 500)\n    } else inner()\n  },\n\n  toast: function(msg, time) {\n    window.JSBridge.native('toast', { msg: msg, time: time || 3 })\n  },\n\n  confirm: function(title, msg, ok, cancel, isPromise) {\n    return window.JSBridge.native('confirm', {\n      title: title,\n      msg: msg,\n      ok: ok,\n      cancel: cancel\n    }, isPromise)\n  }\n}\n\nexport default JSBridge\n","/**\n * 封装的native方法\n * @Author Yang ming\n * @Date 2017/12/14\n *\n * @usage\n * import Native from 'xnpm/@native'\n * let nativeInstance = new Native()\n */\nimport appInfo from '@xm/appInfo'\n// import { orgTypeMap, domainMap } from './methodVersion.js'\nimport cookie from './cookie'\nimport utils from './utils'\nimport mockNative from './mockNative'\nimport locate from './locate'\nimport JSBridge from '../lib/bridge'\n\n// 兼容老版本引入CDN的情况\nlet orgType = cookie.get('orgType')\norgType = orgType ? Number(orgType) : 1\nwindow.AppInfo = appInfo(orgType)\n\nconst defaultOptions = {\n  isPromise: true,\n  orgType,\n  local: false\n}\n\nexport default class Native {\n  search = utils.getSearch()\n  uid = cookie.get('userId')\n  name = cookie.get('username')\n  orgId = this.search && this.search.orgId\n    ? this.search.orgId\n    : cookie.get('orgId')\n\n  // 应用信息\n  appInfo = appInfo(orgType)\n\n  // get cookie method\n  cookie = cookie.get\n  debug = cookie.debug.bind(cookie)\n\n  // native method version\n  // methodVersion = domainMap[this.appInfo.domain]\n\n  constructor(options = {}) {\n    const mergeOptions = {\n      ...defaultOptions,\n      ...options\n    }\n    if (mergeOptions.orgType) {\n      // this.setAppInfoByField('orgType', Number(mergeOptions.orgType))\n      this.appInfo = appInfo(orgType)\n    }\n    // else {\n    //   console.log('cookie orgType is undefined')\n    // }\n    this.options = mergeOptions\n  }\n\n  /**\n   * noop\n   */\n  setAppInfoByField() {\n  }\n\n  // 判断方法是否可用，是否采用mock模式\n  native(method, data = {}) {\n    if (this.isMethodUseAble(method, data.mock)) {\n      return data.mock\n        ? mockNative(method, data)\n        : JSBridge.nativePromise(method, data)\n    } else {\n      this.noticeUpdateClient()\n      return Promise.reject()\n    }\n  }\n\n  // 提醒用户升级客户端\n  // @params msg {String} 提示语\n  noticeUpdateClient(msg = '当前版本不支持该功能，请升级') {\n    window.JSBridge.confirm('温馨提示', msg, '立即升级', '取消').then(res => {\n      if(res.data === 'ok') {\n        location.href = window._ESC_APP_CONFIG && window._ESC_APP_CONFIG.downloadUrl || this.appInfo.data.downUrl\n      }\n    })\n  }\n\n  // 新窗口打开链接\n  // @params options {Object} 包含以下参数\n  // @params options.url {String} :地址 必填\n  // @params options.cookie {Number} 可选选项\n  // @params options.noDefaultMenu {Number} 右上角菜单分享菜单按钮\n  // @params options.navicolor {String} 导航栏颜色\n  openUrl(options) {\n    let data = {\n      url: '',\n      cookie: 1,\n      noDefaultMenu: 1,\n      // param: '',\n      // navicolor: '',\n      mock: false\n      // needCloseCurrentPage: 1\n    }\n\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.url = options\n    }\n    return this.native('openurl', data)\n  }\n\n  // 打开应用中心的应用\n  // @params options {Object} 包含以下参数\n  // @params options.appid {Number} 应用的id 必填\n  // @params options {Object} 其他的可选参数\n  openApp(options) {\n    let data = {}\n    if (options instanceof  Object) {\n      data = options\n    } else {\n      data.url = options\n    }\n    return this.native('openapp', data)\n  }\n\n  // ToDo 事项告知 => type 为 4时无效果   待解决\n  // 工作台调用\n  // @params options {Object} 包含以下参数\n  // @params options.type {Number} 工作台类型 必填\n  // @params options.id {Number} 具体id 必填\n  openOtherPage(options) {\n    return this.native('openotherpage', options)\n  }\n\n  // 唤醒聊天\n  // @params options {Object} 包含以下选项\n  // @params options.type {Number} 类型 单人1 群聊2 必填\n  // @params options.id {Number} 会话id 必填\n  // @params options.name {Number} 会话名称 必填\n  chat(options) {\n    return this.native('chat', options)\n  }\n\n\n  // 唤醒会议室列表\n  // @params options {Object} 参数对象\n  // @params options.orgid {Number} 公司id 必填\n  // @params options.orgname {Number} 公司名称 必填\n  getMeetingPage(options = { orgid: this.orgId }) {\n    return this.native('getmeetingpage', options)\n  }\n\n  // 会议室管理员列表\n  // @params options {Object} 参数对象\n  // @params options.orgid {Number} 公司id 必填\n  // @params options.orgname {String} 公司名称 必填\n  meetingAdminPage(options = { orgid: this.orgId }) {\n    return this.native('meetingadminpage', options)\n  }\n\n  // 获取客户端版本\n  getVersion(mock = false) {\n    return new Promise((resolve, reject) => {\n      let version\n      let appversion = utils.getCookie('appversion')\n      if (appversion) {\n        version = appversion\n        resolve(version)\n      } else {\n        this.native('getversion', { mock }).then(res=> {\n          version =  res.data.version\n          // 校验version格式\n          // Android_6.8.0\n          if (version && !version.includes('_')) {\n            version = '_' + version\n          }\n          resolve(version)\n        }).catch((e)=> {\n          this.toast('调用客户端version失败')\n          reject('None_0.0.0')\n        })\n      }\n    })\n  }\n\n  // 获取客户端所有支持的协议和方法\n  getAllMethod() {\n    return window.JSBridge.native('getallmethod')\n  }\n\n  // 判断方法是否被支持\n  // @params options {Object|String} 方法名\n  // @params mock {Boolean} 是否本地mock\n  checkMethod(options) {\n    let data = {}\n    if (options instanceof Object) {\n      data = { ...options }\n    } else {\n      data.method = options\n    }\n    return this.native('checkmethod', data)\n  }\n\n  // 外部分享\n  // @params options {Object|Number} 传递的参数可包含以下选项\n  // @params options.type {Number} 1=>微信分享 2=>发送给微信朋友 3=>彩云 4=>QQ好友 必填\n  // @params options.title {String} 分享出去的标题\n  // @params options.desc {String} 分享描述\n  // @params options.link {String} 分享链接\n  // @params options.pic {String} 分享时的图片\n  outerShare(options) {\n    let data = {\n      title: '',\n      desc: '',\n      link: '',\n      pic: ''\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.type = options\n    }\n    return this.native('outershare', data)\n  }\n\n  // 分享\n  // @params options.title {String} 分享出去的标题\n  // @params options.desc {String} 分享描述\n  // @params options.link {String} 分享链接\n  // @params options.pic {String} 分享时的图片\n  share(options) {\n    let data = {\n      title: '',\n      desc: '',\n      link: '',\n      pic: ''\n    }\n    data = { ...data, ...options }\n    return this.native('share', data)\n  }\n\n  // 短信分享\n  // @params options {Object|null} 可包含以下可选项\n  // @params options.filter {String} 发送对象过滤\n  //  (\"all\":全部,\"unactived\":未激活，默认全部)\n  // @params options.desc {String} 描述内容(为空时取当前窗口的内容)\n  msgShare(options = {}) {\n    return this.native('msgshare',options)\n  }\n\n  // 分享组件\n  // @params options {Object} 包含以下参数\n  // @params options.type {Number} 具体用的时候找客户端\n  // @params options.message {String} 消息内容\n  // @params options.extdata {String} 扩展内容(用的时候和type对应)\n  sendMsg(options) {\n    return this.native('sendmsg',options)\n  }\n\n  getOrgNameById(orgId = this.orgId) {\n    // let key = this.orgId + '-name'\n    // let localName = wsCache.get(key)\n    // if (localName) {\n    //   // 本地存在\n    //   return Promise.resolve(decodeURIComponent(localName))\n    // } else {\n    // 从客户端取\n    return new Promise((resolve, reject)=> {\n      this.native('getorglist', { orgId }).then(res=> {\n        if (res && res.data.length > 0) {\n          // 存在本地 设置失效时间为1d\n          // wsCache.set(key, res.data[0].orgName, { exp: 24*3600 })\n          resolve(decodeURIComponent(res.data[0].orgName))\n        } else {\n          this.toast('getOrgNameById，客户端getorglist返回为空')\n          reject({ code: 400 })\n        }\n      })\n    })\n    // }\n  }\n\n  // 选择成员\n  // @params options {Object|Number} 当传递对象时，包含以下属性\n  // @params options.count {Number} 选择的人数\n  // @params options.selectMeType {Number} 对于自己的选择操作，有以下选项\n  // 0:默认不选中，可选择，可取消；1: 默认不选中，不可选择；2:默认选中，不可取消；3:默认选中，可选择，可取消\n  // @params options.orgid {Number} 企业id\n  // @params options.orgName {String} 企业名称\n  // @params options.type {Array|Number} 获得的群类型,包含以下选项\n  // 1:组织机构 2:群 3:手机通讯录 4:名片夹 5:我的好友 6:常用联系人 7:外部共享联系人\n  // @params options.excludedtype {Array|Number}\n  // 1:排除未激活 2:排除已激活 3:排除无手机号 4:排除无邮箱 5:排除管理员 6:排除老板\n  // @params options.selected {Array} 默认选中人的数组\n  // @params options.department {Array} 从哪些部门选中\n  selectMembers(options) {\n    return this.getOrgNameById().then(orgName=> {\n      let data = {\n        count: 5,\n        selectMeType: 0,\n        orgid: this.orgId,\n        orgName,\n        type: 1,\n        excludedtype: 1,\n        selected: [],\n        department: []\n      }\n      if (options instanceof Object) {\n        if (options.type && Array.isArray(options.type)) {\n          options.type = utils.getBinarySum(options.type)\n        }\n        if (options.excludedtype && Array.isArray(options.excludedtype)) {\n          options.excludedtype = utils.getBinarySum(options.excludedtype)\n        }\n        data = { ...data, ...options }\n      } else if (typeof options === 'number') {\n        data.count = options\n      }\n      return this.native('selectmembers', data)\n    })\n  }\n\n  // 选择部门\n  // @params options {Object|Number} 包含以下选项\n  // @params options.count {Number} 选择的部门数\n  // @params options.orgid {Number} 企业id\n  // @params options.selected {Array} 已选择部门的数组\n  selectDepartments(options) {\n    let data = {\n      count: 5,\n      orgid: this.orgId,\n      selected: []\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options}\n    } else if (typeof options === 'number') {\n      data.count = options\n    }\n    return this.native('selectdepartments', data)\n  }\n\n  // 获取企业信息\n  // @params orgid {Number} 企业id 选填\n  getOrgList(orgid = this.orgId) {\n    let data = {}\n    if (orgid) {\n      data.orgid = orgid\n    }\n    return this.native('getorglist', data)\n  }\n\n  // 后端返回 { code:200 } 暂不明白意思\n  // @params orgid {Number} 企业id 选填\n  getOrgAdminList(orgid = this.orgId) {\n    let data = {}\n    if (orgid) {\n      data.orgid = orgid\n    }\n    return this.native('getorgadminlist', data)\n  }\n\n  // 判断用户是否为企业的管理员\n  // @params options {Object} 包含以下可选项\n  // @params options.uid {Number} 用户id\n  // @params options.orgid {Number} 企业id\n  isOrgAdmin(options) {\n    let data = {\n      uid: this.uid,\n      orgid: this.orgId\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.uid = options\n    }\n    return new Promise((resolve, reject) => {\n      this.getOrgAdminList(data.orgid).then(res => {\n        if (res.data && res.data.length) {\n          res.data.map((item, index) => {\n            if (item.uid === data.uid) {\n              resolve(true)\n            }\n          })\n        }\n        resolve(false)\n      })\n    })\n  }\n\n  // 获取定位信息\n  locate(options) {\n    return locate.call(this, options)\n  }\n\n  // H5打点到友盟\n  // @params options {Object|String} 包含以下选项\n  // @params eventId {String} 统计事件ID(在友盟中定义)\n  // @params param {String} 在友盟里的一个跟踪参数\n  // 返回service-1 对应数组[移动,联通,电信]\n  pageStat (options) {\n    let data = {}\n    if (options instanceof Object) {\n      data = options\n    } else {\n      data.eventId = options\n    }\n    return this.native('pagestat', data)\n  }\n\n  // 获取用户手机类型\n  getOperator(mock = false) {\n    return this.native('getoperator', { mock: false })\n  }\n\n  // 客户端右上角自定义菜单\n  // @params options {Array} 包含以下属性\n  // @params options.name {String} 菜单名\n  // @params options.icon {String} 菜单名前图标\n  // @params options.action {String} 菜单执行动作\n  // @params options.unreadCount {Number} 菜单红点（默认0不显示红点，大于0显示红点）\n  menu(options) {\n    let data = {\n      name: '',\n      icon: '',\n      action: '',\n      unreadCount: 0,\n      mock: false\n    }\n    if (Array.isArray(options)) {\n      data = options.map(item=> {\n        return { ...data, ...item }\n      })\n    } else {\n      this.toast('menu options is a array')\n    }\n    return this.native('menu', data)\n  }\n\n  // { '完成': ()=> {} }\n  menuCallJs(name, fn) {\n    let fnName\n    let menuData = []\n\n    if (typeof name === 'object') {\n      menuData = Object.keys(name).map((key, i)=> {\n        fnName = utils.genderCallbackToken(i)\n        this.defineCallback(fnName, name[key])\n        return {\n          name: key,\n          action: `native://calljs?callback=${fnName}`\n        }\n      })\n    } else if (typeof name === 'string' && typeof fn === 'function') {\n      fnName = utils.genderCallbackToken()\n      this.defineCallback(fnName, fn)\n      menuData.push({\n        name,\n        action: `native://calljs?callback=${fnName}`\n      })\n    }\n    this.menu(menuData)\n  }\n\n  // 刷新当前页，不打开新的webview\n  // @params options {Object|String} 当前页url\n  refresh(options) {\n    let data = {}\n    if (options instanceof Object) {\n      data = options\n    } else {\n      data.name = options\n    }\n    this.native('locate', data)\n  }\n\n  // 查看我的计步器\n  // @params options {Object|Number} 包含以下选项\n  // @params pageIndex {Number} 应跳转到的界面类型 可选一下类型\n  // 0:计步器首页,1.0:今日榜单部门排行,1.1:今日榜单公司排行,2:个人信息\n  // @params leaderboardTimestamp {Number} Unix时间戳，默认为今天\n  pedometer(options) {\n    let data = {}\n    if (options instanceof  Object) {\n      if (typeof options.leaderboardTimestamp === 'string') {\n        options.leaderboardTimestamp = new Date(options.leaderboardTimestamp).getTime()*1000\n      }\n      data = options\n    } else {\n      data.pageIndex = options\n    }\n    return this.native('pedometer', data)\n  }\n\n  // 一键激活\n  // @params options {Object|Number} 包含以下属性\n  // @params options.orgId {Number} 企业id\n  // @params options.deptIds {Array|Number} 部门id数组或部门id\n  activeAll(options) {\n    let data = {\n      orgId: this.orgId\n    }\n    if (options instanceof Object) {\n      if (typeof options.deptIds === 'number') {\n        data.deptIds = [options.deptIds]\n      } else if (Array.isArray(options.deptIds)) {\n        data.deptIds = options.deptIds\n      }\n      data = { ...data, ...options }\n    } else {\n      data.orgId = options\n    }\n    return this.native('activeall', data)\n  }\n\n  // 添加管理员\n  // @params options {Object|Number}\n  // @params options.orgId {Number} 企业id\n  // @params options.type {Number} 管理员类型\n  // 1=>管理员 2=>老板\n  addAdmin(options) {\n    let data = {\n      orgId: this.orgId\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.orgId = options\n    }\n    return this.native('addadmin', data)\n  }\n\n  // 判断是否是wifi环境\n  isWifi() {\n    return this.native('iswifi')\n  }\n\n  // 工作轨迹\n  // @params options {Object|Number}\n  // @params options.type {Number} 应跳转到的界面类型，不同类型传不同的参数\n  // 0=>工作轨迹首页\n  // @params options.orgId {Number} 企业id\n  // 1=>详情页\n  // @params options.contailId {Number} 详情id\n  workingTrack(options) {\n    let data = {\n      orgId: this.orgId\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options}\n    } else {\n      data.type = options\n    }\n    return this.native('workingtrack', data)\n  }\n\n  // ToDo 无反应\n  // 修改用户信息\n  // @params options {Objecct\n  // @params options.uid {Number} 用户id\n  // @params options.orgid {Number} 企业id\n  // @params options.name {String} 姓名\n  // @params options.mobile {String} 手机1\n  // @params options.title {String} 职位\n  // @params options.email {String} 邮箱\n  // @params options.workPhone {String} 固话1\n  // @params options.shotNum {String} 分号1\n  // @params options.workPhone2 {String} 固话2\n  // @params options.shotNum2 {String} 分机号2\n  // @params options.homePhone {String} 手机2\n  // @params options.fax {String} 传真\n  // @params options.departmentId {Number} 部门\n  // @params options.newDeptId {Number} 部门\n  updateUser(options) {\n    let data = {\n      uid: this.uid,\n      orgid: this.orgId,\n      name: '',\n      mobile: '',\n      title: '',\n      email: '',\n      workPhone: '',\n      shotNum: '',\n      workPhone1: '',\n      shotNum1: '',\n      workPhone2: '',\n      shotNum2: '',\n      homePhone: '',\n      fax: '',\n      departmentId: 0,\n      newDeptId: 0\n    }\n    data = { ...data, ...options }\n    return this.native('updateuserinfo', data)\n  }\n\n  // ToDo 没有反应\n  // 修改企业信息\n  // @params options{Object|Number|String}\n  // @params options.orgid {Number} 企业id\n  // @params options.orgname {String} 企业名称\n  updateOrgname(options) {\n    let data = {\n      orgid: this.orgId,\n      orgName: ''\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else if (typeof options === 'string') {\n      data.orgName = options\n    } else {\n      data.orgid = options\n    }\n    return this.native('updateorgname', data)\n  }\n\n  // 添加考勤助手\n  // @params id {Number} id\n  addIbeacon(id) {\n    return this.native('addibeacon', { id: id })\n  }\n\n  // 获取设备唯一标识\n  getMachineId() {\n    return this.native('getidentification')\n  }\n\n  // ToDo 无反应\n  // 获取当前可用的wifi列表\n  availableWifiList() {\n    return this.native('availablewifilist')\n  }\n\n  // 获取当前连接的wifi信息\n  currentWifi() {\n    return this.native('currentwifi')\n  }\n\n  // 文件上传\n  // @params url {String} 上传的地址\n  saveFile(url) {\n    return this.native('saveFile', { url: url })\n  }\n\n  // ToDo 无反应\n  // 插入日程\n  // @params options {Object} 必需为对象\n  // @params options.content {String} 内容\n  // @params options.starttime {Number} 开始时间\n  // @params options.endtime {Number} 结束时间\n  // @params options.alerttime {Number} 提醒时间\n  // @params options.url {String} 日程详情链接\n  // @params options.note {String} 备注\n  systemEvent(options) {\n    let tomorrow = utils.getTomorrowTimeStamp()\n    let now = new Date().getTime()*1000\n    let data = {\n      content: '',\n      stattime: now,\n      endtime: tomorrow,\n      alerttime: (tomorrow + now)/2,\n      url: '',\n      note: ''\n    }\n    data = { ...data, ...options }\n    return this.native('systemevent', data)\n  }\n\n  // ToDo 根据cookie设置默认服务端上传地址\n  // 录制语音\n  // @params url {String} 语音上传的服务端地址url\n  audioRecord(url = '') {\n    return this.native('audioRecord', { url: url })\n  }\n\n  // 录制视频\n  // @params url {String} 视频上传的地址url\n  videoRecord(url = '') {\n    return this.native('videoRecord', { url: url })\n  }\n\n  // 解散团队\n  // @params orgid {Number} 企业id\n  dissolveTeam(orgid = this.orgId) {\n    return this.native('dissolveteam', { orgid: orgid })\n  }\n\n  // 打开pdf\n  // @params options {Object|String}\n  // @params options.url {String} pdf文件的url地址\n  // @params options.name {String} 文件名\n  // @params options.buttons {Array} pdf展示页面底部按钮，数组，每项格式如下\n  // {name: '', action: ''}\n  openPdf(options) {\n    let data = {\n      url: '',\n      name: '',\n      buttons: []\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.url = options\n    }\n    return this.native('openpdf', data)\n  }\n\n  // ToDo 无反应\n  // 消息红点\n  // @params options {Object}\n  // @params options.orgId {Number} 企业id\n  // @params options.appId {Number} 应用id\n  // @params options.unreadCount {Number} 为0的时候清掉红点，为其他值显示红点\n  msgRedDot(options) {\n    let data = {\n      orgId: this.orgId\n    }\n    data= { ...data, ...options }\n    return this.native('msgRedDot', options)\n  }\n\n  // ToDo 无反应\n  // 让客户端更新工作tab上审批，工作报告，签到的显示数量\n  // @params iconId {Number} 对应入口的数据id\n  // 38:未读公告;39:出勤人数;40:迟到次数;41:我的审批;42:待我审批;43:今日步数;44:未激活人数;45:未读工作报告\n  callClientUpdate(iconId) {\n    let data = {\n      orgId: this.orgId,\n      iconId: iconId\n    }\n    return this.native('callclientupdate', data)\n  }\n\n  // 收起客户端键盘\n  hideKeyboard() {\n    this.native('hidekeyboard')\n  }\n\n  // 创建团队\n  createTeam() {\n    this.native('createteam')\n  }\n\n  // 打开更多应用\n  openCommonTools() {\n    this.native('opencommontools')\n  }\n\n  // 选择文件\n  // @params options {Object}\n  // @params options.count {Number} 选择数量(0表示不限个数)\n  // @params options.type {Number} 类型（1:照片 2:云盘 4:手机文件(仅限安卓) ）\n  selectFile(options) {\n    return this.native('selectfile', options)\n  }\n\n  // 打开邀请页面\n  openInvite() {\n    return this.native('openinvite')\n  }\n\n  // 选择地区\n  // @params selected {Number} 最后一级的code\n  selectCity(selected) {\n    return this.native('selectcity', { selected })\n  }\n\n  // 选择行业\n  // @params selectindustry {Number} 最后一级的code\n  selectInDustry(selected) {\n    return this.native('selectindustry', { selected })\n  }\n\n  // 调用客户端个人详情面板\n  personDetail(options) {\n    let data = {\n      uid: this.uid,\n      name: ''\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options}\n    } else {\n      data.uid = options\n    }\n    return this.native('persondetail', data)\n  }\n\n  // 生成二维码字符串\n  cameraScan() {\n    return this.native('camerascan')\n  }\n\n  // 向JSBridge中添加回调函数\n  defineCallback(name, fn) {\n    if (typeof name === 'string') {\n      window.JSBridge._callback[name] = fn\n    } else {\n      Object.keys(name).map(key => {\n        window.JSBridge._callback[key] = name[key]\n      })\n    }\n  }\n\n  // 客户端调用js方法\n  // callJs() {\n  // \treturn this.native('calljs')\n  // }\n\n  callParentJs(data, callback) {\n    if (!this.isMethodUseAble('callparentjs')) {\n      this.noticeUpdateClient()\n      return\n    }\n\n    let callUrl = 'native://callparentjs'\n    callUrl += `?data=${encodeURIComponent(JSON.stringify(data))}`\n    callUrl += `&callback=${callback}`\n\n    // eslint-disable-next-line\n    window.JSBridge._postToNative(callUrl)\n    window.JSBridge.native('close')\n  }\n\n  // 呼起客户端个人详情编辑面板\n  editUserDetail() {\n    // let data =\n    return this.native('edituserdetail')\n  }\n\n  noMenu() {\n    window.JSBridge.noMenu(true)\n  }\n\n  toast(str) {\n    console.log(str)\n    window.JSBridge.toast(str)\n  }\n\n  // alert提示框\n  alert(title = '', msg = '') {\n    return this.native('alert', {\n      msg: msg,\n      title: title\n    })\n  }\n\n  // confirm确认框\n  confirm(options) {\n    let data = {\n      title: '',\n      msg: '',\n      ok: '确定',\n      cancel: '取消'\n    }\n    if (typeof options === 'string') {\n      data.msg = options\n    } else {\n      data = { ...data, ...options }\n    }\n    return new Promise((resolve, reject)=> {\n      this.native('confirm', data).then(res=> {\n        if (res.data === 'ok') {\n          resolve()\n        } else if (res.data === 'cancel') {\n          reject()\n        }\n      })\n    })\n  }\n\n  // prompt 输入提示框\n  // @params options {Object}\n  // @params title {String} 标题\n  // @params msg {String} 提示信息\n  // @params placeholder 文本框提示文本\n  // @params textLength 输入长度\n  prompt(options) {\n    let data = {\n      title: '',\n      msg: '',\n      placeholder: '',\n      textLength: -1,\n      confirmText: '确定',\n      cancelText: '取消'\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.title = options\n    }\n\n    return this.native(\n      this.isMethodUseAble('multilineprompt') ? 'multilineprompt' : 'prompt',\n      data\n    )\n  }\n\n  // actionsheet 操作多选\n  // @params options {Object|String}\n  // @params options.title {String} 标题\n  // @params options.list {Array} 提示信息\n  actionSheet(options) {\n    let data = {\n      title: '',\n      list: []\n    }\n    if (options instanceof Object) {\n      if (typeof options.list === 'string') {\n        data.list.push({\n          text: '',\n          desc: '',\n          value: ''\n        })\n      }\n      if (Array.isArray(options.list)) {\n        data.list = [ ...options.list ]\n      }\n    } else {\n      data.list.push({\n        text: '',\n        desc: '',\n        value: ''\n      })\n    }\n    return this.native('actionSheet', data)\n  }\n\n  // 模态框\n  // @params options {Object|String}\n  // @params options.title {String} 标题\n  // @params options.msg {String} 内容\n  // @params options.img {String} 图片地址\n  // @params options.link {String} 点击了解更多跳转地址\n  modal(options) {\n    let data = {\n      title: '',\n      msg: '',\n      img: '',\n      link: ''\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.title = options\n    }\n    return this.native('modal', data)\n  }\n\n  // 选择图片\n  // @params max {Number} 最多选择图片数\n  selectPic(max = 5) {\n    return this.native('selectpic', { max: max })\n  }\n\n  // 选择日期\n  // @params options {Object|Number}\n  // @params options.type {Number} 区分选择时间的类型\n  // 1=>默认现有的类型，根据format返回不同的值 2=>选择一天中的上午下午\n  // @params options.customData {Array} type=2时有效，例如customData=['上午', '下午']\n  // @params options.defaultValue {Number} 默认的时间\n  // @params options.defaultCustomValue {String} type=2时有效，例如defaultCustomValue='上午'\n  // @params options.format {String} 返回格式\n  selectDate(options) {\n    let data = {\n      type: 1,\n      customData: ['上午', '下午'],\n      defaultValue: new Date().getTime(),\n      defaultCustomValue: '上午',\n      format: 'yyyy-MM-dd HH:mm'\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.type = options\n    }\n    return this.native('selectdate', data)\n  }\n  // 只能选时间段，返回时间戳\n  // @params options {Object} 参数对象\n  // @return Promise\n  selectPeriodDate(options) {\n    return new Promise((resolve, reject) => {\n      let data = {\n        type: 2,\n        customData: ['上午', '下午'],\n        customDataTime: ['08:00', '18:00'],\n        defaultValue: new Date('2018-01-25 08:00').getTime(),\n        defaultCustomValue: '上午'\n      }\n      if (options instanceof Object) {\n        data = { ...data, ...options }\n      } else if (options) {\n        this.toast('参数错误')\n        return\n      }\n\n      this.native('selectdate', data).then(res => {\n        if (data.type === 1) {\n          resolve({\n            code: 200,\n            data: new Date(res.data).getTime()\n          })\n        } else {\n          let period = res.data.slice(res.data.length - 2),\n              idx = data.customData.indexOf(period),\n              timeStr = res.data.replace(period, data.customDataTime[idx])\n              resolve({\n                code: 200,\n                data: new Date(timeStr).getTime()\n              })\n        }\n      })\n    })\n  }\n\n\n\n  // 选取组件\n  picker(options) {\n    let data = {\n      title: '',\n      list: []\n    }\n    if (options instanceof Object) {\n      if (Array.isArray(options.list)) {\n        data.list = [ ...options.list ]\n      } else {\n        data.list.push({\n          text: '',\n          value: ''\n        })\n      }\n    }\n    return this.native('picker', data)\n  }\n\n  // 选择企业\n  // selectCorp() {\n  // \treturn this.native('selectcorp')\n  // }\n\n  // 唤起拍照\n  // Todo 拍照后无反应\n  photo() {\n    return this.native('photo')\n  }\n\n  // 跳转到我的好友\n  findFriend() {\n    return this.native('findfriend')\n  }\n\n  // 新建日程\n  // @params options {Object}\n  // @params options.content {String} 内容 必填\n  // @params options.time {Number} 日程时间 必填\n  // @params options.remindtime {Number} 提醒时间(默认0，老版本)\n  // @params options.remindtype {Number} 提醒方式\n  // @params options.priority {Number} 优先级\n  schedule(options) {\n    let data = {\n      content: '',\n      time: new Date().getTime(),\n      remindtime: utils.getTomorrowTimeStamp(),\n      remindtype: 1,\n      priority: 0\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options}\n    } else {\n      data.content = options\n    }\n    return this.native('schedule', data)\n  }\n\n  // 跳转至联系管理员页面\n  // @params options {Object|Number}\n  // @params options.orgid {Number} 企业id\n  // @params options.departid {Number} 部门id\n  // orgid和departid都没有不发生跳转；只有orgid跳转到联系【企业】管理员页面；都有跳转到联系【部门】管理员页面\n  openContractManager(options) {\n    let data = {\n      orgid: this.orgId\n    }\n    if (options instanceof Object) {\n      data = { ...data, ...options }\n    } else {\n      data.orgid = options\n    }\n    return this.native('opencontractmanager', data)\n  }\n\n  // 发起聊天\n  launchChat() {\n    return this.native('launchchat')\n  }\n\n  // 关闭webview\n  close() {\n    return this.native('close')\n  }\n\n  // 关闭自动考勤弹框\n  closeSignAlert() {\n    return this.native('losesignalert')\n  }\n\n  // 预览图片\n  // @params options {Object}\n  // @params position {Number} 打开时展示第几张图片\n  // @params urls {Array} 预览的图片链接数组\n  previewImages(options) {\n    let data = {\n      position: 0,\n      urls: []\n    }\n    data = { ...data, ...options }\n    return this.native('previewimages', data)\n  }\n\n  // ToDo datatype 为1时无反应\n  // 自定义级联下拉\n  // @params options {Object}\n  // @params dialogTitle {String} 窗口标题\n  // @params level {Number} 级联的层级 展示几级\n  // @params datatype {Number} 数据是否有级联关系，0有级联，1没有级联；默认0\n  // @params selected {Array} 已选择的值\n  // @params data {Number} datatype===0 时的数据源\n  // @params idata {Number} datatype===1 时的数据源\n  customDataSelect(options) {\n    let data = {\n      dialogTitle: '',\n      level: 0,\n      datatype: 0,\n      selected: [],\n      data: [],\n      idata: []\n    }\n    data = { ...data, ...options }\n    return this.native('customdataselect', data)\n  }\n\n  // 校验native方法是否可用\n  // @param method 方法名\n  // @param mock 是否为本地mock数据\n  // @returns {boolean}\n  isMethodUseAble(method, mock = false) {\n    // let version = this.cookie('appversion')\n    // let methodVersion = this.methodVersion\n    //\n    // if (mock) {\n    //   console.log(`mock native method: ${method}`)\n    //   return true\n    // }\n    //\n    // if (this.options.local) {\n    //   version = 'local_100.0.0'\n    //   console.log('mock local version: local_100.0.0')\n    // } else if (!version || !/_/.test(version)) {\n    //   console.warn('cookie version is not found')\n    //   return false\n    // }\n    //\n    // if (methodVersion && Object.keys(methodVersion).includes(method)) {\n    //   return this.compareVersion(version, methodVersion[method])\n    // }\n    return true\n  }\n\n  compareVersion(localVersion, newVersion) {\n    if (!localVersion) {\n      return false\n    }\n    localVersion = localVersion.split('_')[1].split('.').map(x => Number(x))\n    newVersion = newVersion.split('.').map(x => Number(x))\n\n    for (let i = 0; i < localVersion.length; i++) {\n      if (localVersion[i] < newVersion[i]) {\n        return false\n      }\n    }\n    return true\n  }\n\n  commonCatchSchema(method, data, nativeResult) {\n    if (nativeResult) {\n      console.log(nativeResult)\n    }\n    this.toast(`${method} is call error by client`)\n  }\n}\n\n","export default function (method, data) {\n  switch(method) {\n    case 'openurl': {\n      if (/http[s]*/.test(data.url)) {\n        location.href = data.url\n      } else {\n        alert('url不合法')\n      }\n    } break\n\n    case 'getversion': {\n      return Promise.resolve({ code: 200, data: { version: '100.1.0'}})\n    }\n\n    case 'getlocation': {\n      return Promise.resolve({\n        code: 200,\n        data: {\n          AOIName: '',\n          POIName: '西溪壹号',\n          // adcode: 330106,\n          adcode: '',\n          city: '杭州',\n          citycode: '0571',\n          country: '中国',\n          district: '西湖区',\n          errorCode: 0,\n          lat: 30.281809,\n          lng: 120.068968,\n          location: 0,\n          province: '浙江省',\n          street: '花匠路',\n          streetNum: '796号'\n        }\n      })\n    }\n  }\n}\n"],"names":["origin","location","hostname","split","ext","length","online","test","protocol","getDataByField","field","val","type","info","key","jituancaiyun","allName","name","logo","logoAbs","slogan","uri","uriPrefix","adminPrefix","hostName","color","avatar","orgType","downUrl","adminUrl","loginUrl","userInfoDoUrl","serviceUrl","approveUrl","expenseUrl","expenseCreateUrl","id","this","hasSceneCmsLink","domain","duanmatong","henan","jx","maizhiyun","hebeicaiyun","sd","undefined","Number","data","result","target","setToObject","cookieValue","document","cookie","cookies","i","trim","substring","decodeURIComponent","obj","payToken","set","keys","forEach","navigator","userAgent","search","slice","searchObj","splitArr","paramArr","substr","array","sum","map","item","date","Date","setDate","getDate","getTime","num","now","locateInstance","locateComplete","timerHandle","handleAddressComponent","address","city","province","district","every","x","doLocateRes","lnglatArr","adcode","lat","lng","format","Promise","resolve","window","AMap","res","rej","service","Geocoder","getAddress","status","regeocode","addressComponent","then","locateError","session","param","Object","sessionStorage","getItem","JSON","parse","setItem","stringify","reject","code","msg","timeout","delayTimeout","setTimeout","ua","util","match","JSBridge","callbackToken","response","_callback","err","error","params","self","callback","token","callbackName","_token","createdUrl","_getUrlByParams","_postToNative","totalUrl","method","babelHelpers.typeof","encodeURIComponent","iframe","createElement","src","style","display","body","appendChild","removeChild","nativePromise","cb","requestHybrid","f","noDelay","inner","native","time","title","ok","cancel","isPromise","get","AppInfo","appInfo","defaultOptions","options","utils","getSearch","uid","orgId","debug","bind","mergeOptions","isMethodUseAble","mock","url","href","version","mockNative","noticeUpdateClient","confirm","_ESC_APP_CONFIG","downloadUrl","_this","orgid","appversion","getCookie","includes","catch","e","toast","orgName","getOrgNameById","_this4","Array","isArray","getBinarySum","excludedtype","count","getOrgAdminList","index","sessionLocate","timeoutHack","isIOS","log","force","clearTimeout","finally","call","eventId","fn","fnName","menuData","genderCallbackToken","defineCallback","push","menu","leaderboardTimestamp","pageIndex","deptIds","tomorrow","getTomorrowTimeStamp","iconId","selected","callUrl","noMenu","str","list","max","period","idx","customData","indexOf","timeStr","replace","customDataTime","content","localVersion","newVersion","nativeResult"],"mappings":"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"}